{"version":3,"file":"js/989.c9663c4e.js","mappings":"slEAGA,MAAMA,EAAa,CAAEC,MAAO,QACtBC,EAAa,CAAC,QAMpB,OAA4BC,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,YACRC,KAAAA,CAAMC,GCIR,MAAMC,GAAWC,EAAAA,EAAAA,MAAcC,EAAQ,GAAYC,EAAQ,GACrDC,EAAO,EAAGC,GAAOJ,EAAAA,EAAAA,IAAI,GAAIK,EAAYC,KAAKC,KAAKC,EAAAA,EAAeC,OAASN,GAAOO,GAAQV,EAAAA,EAAAA,IAAI,GDchG,OCbAQ,EAAAA,EAAeG,IAAIC,IACjBV,GAAME,EAAKS,MAAOH,EAAMG,QAAS,CAACC,MAAMF,EAAKE,MAAOC,IAAIH,EAAKI,MAC7DN,EAAMG,QACHH,EAAMG,MAAQV,IAAS,GAAKC,EAAKS,MAAQR,EAAW,IACrDJ,EAAMG,EAAKS,OAAS,IAAIX,GACxBE,EAAKS,QACLX,EAAMO,OAAS,EACfC,EAAMG,MAAQ,GAEbT,EAAKS,QAAUR,EAAY,IAC5BJ,EAAMG,EAAKS,OAAS,IAAIX,MAG5BH,EAASc,MAAQ,IAAIZ,GDAd,CAACgB,EAAUC,MACRC,EAAAA,EAAAA,OC/BRC,EAAAA,EAAAA,IAQM,aAPJC,EAAAA,EAAAA,IAMQ,QANR7B,EAMQ,EALN6B,EAAAA,EAAAA,IAIQ,gBD4BLF,EAAAA,EAAAA,KAAW,IC/BZC,EAAAA,EAAAA,IAEKE,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFuBxB,EAAAc,MAAQ,CAAxBW,EAAMC,MDgCRN,EAAAA,EAAAA,OChCVC,EAAAA,EAAAA,IAEK,MAFkCM,IAAKD,GAAK,GDiC5CN,EAAAA,EAAAA,KAAW,IChCdC,EAAAA,EAAAA,IAAqGE,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAA5EC,EAAI,CAAjBG,EAAKC,MDiCLT,EAAAA,EAAAA,OCjCZC,EAAAA,EAAAA,IAAqG,MAArEM,IAAKE,GAAG,EAAEP,EAAAA,EAAAA,IAAsD,KAAlDQ,KAAMF,EAAIZ,IAAKe,OAAO,WDqC3DC,EAAAA,EAAAA,ICrCuEJ,EAAIb,OAAK,EAAApB,ODuCnF,UAEJ,YAKZ,IEhDA,MAAMsC,EAAc,EAEpB,O","sources":["webpack://vue3/./src/views/ToolsView.vue?802a","webpack://vue3/./src/views/ToolsView.vue","webpack://vue3/./src/views/ToolsView.vue?00d0"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { width: \"100%\" }\nconst _hoisted_2 = [\"href\"]\n\nimport { ref } from 'vue';\r\nimport toolsJson from '../../public/tools.json';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ToolsView',\n  setup(__props) {\n\r\nconst toolUrls = ref<any[]>(), tools = [] as any,  items = [] as any;\r\nconst cols = 5, rows = ref(0), totalRows = Math.ceil(toolsJson.urls.length / cols), count = ref(0);\r\ntoolsJson.urls.map(item => { \r\n  items[rows.value, count.value] = {title:item.title, url:item.addr};\r\n  count.value++\r\n  if(count.value % cols === 0 && rows.value < totalRows -1){\r\n    tools[rows.value] = [...items];\r\n    rows.value++\r\n    items.length = 0  ;\r\n    count.value = 0;\r\n  }\r\n  if(rows.value === totalRows - 1){\r\n    tools[rows.value] = [...items];\r\n  }\r\n});\r\ntoolUrls.value = [...tools];\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"table\", _hoisted_1, [\n      _createElementVNode(\"tbody\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(toolUrls.value, (line, index) => {\n          return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(line, (col, idx) => {\n              return (_openBlock(), _createElementBlock(\"td\", { key: idx }, [\n                _createElementVNode(\"a\", {\n                  href: col.url,\n                  target: \"_blank\"\n                }, _toDisplayString(col.title), 9, _hoisted_2)\n              ]))\n            }), 128))\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <table width=\"100%\">\r\n      <tbody>\r\n        <tr v-for=\"(line, index) in toolUrls\" :key=\"index\">\r\n          <td v-for=\"(col, idx) in line\" :key=\"idx\"><a :href=\"col.url\" target=\"_blank\">{{ col.title }}</a></td>\r\n        </tr>\r\n      </tbody>      \r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref } from 'vue';\r\nimport toolsJson from '../../public/tools.json';\r\n\r\nconst toolUrls = ref<any[]>(), tools = [] as any,  items = [] as any;\r\nconst cols = 5, rows = ref(0), totalRows = Math.ceil(toolsJson.urls.length / cols), count = ref(0);\r\ntoolsJson.urls.map(item => { \r\n  items[rows.value, count.value] = {title:item.title, url:item.addr};\r\n  count.value++\r\n  if(count.value % cols === 0 && rows.value < totalRows -1){\r\n    tools[rows.value] = [...items];\r\n    rows.value++\r\n    items.length = 0  ;\r\n    count.value = 0;\r\n  }\r\n  if(rows.value === totalRows - 1){\r\n    tools[rows.value] = [...items];\r\n  }\r\n});\r\ntoolUrls.value = [...tools];\r\n</script>\r\n","import script from \"./ToolsView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ToolsView.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","width","_hoisted_2","_defineComponent","__name","setup","__props","toolUrls","ref","tools","items","cols","rows","totalRows","Math","ceil","toolsJson","length","count","map","item","value","title","url","addr","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_Fragment","_renderList","line","index","key","col","idx","href","target","_toDisplayString","__exports__"],"sourceRoot":""}